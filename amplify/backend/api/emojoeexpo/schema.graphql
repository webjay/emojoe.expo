type Profile
  @model
  @auth(rules: [{ allow: private, operations: [read] }, { allow: owner }]) {
  id: ID!
  subId: String! @index
  owner: String
    @auth(
      rules: [
        { allow: owner, operations: [read, delete] }
        { allow: private, operations: [read] }
      ]
    )
  name: String
  pushToken: String
  groupMemberships: [GroupMembership] @hasMany
  timeZone: String
}

type Group
  @model
  @auth(
    rules: [
      { allow: private, operations: [create, read, update] }
      { allow: public, operations: [read], provider: iam }
    ]
  ) {
  id: ID!
  name: String!
  emoji: String
  memberships: [GroupMembership] @hasMany
}

type GroupMembership
  @model
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  owner: String
    @auth(
      rules: [
        { allow: owner, operations: [read, delete] }
        { allow: private, operations: [read] }
      ]
    )
  profileId: ID! @index
  groupId: ID! @index(sortKeyFields: ["profileId"])
  group: Group! @belongsTo(fields: ["groupId"])
  profile: Profile! @belongsTo(fields: ["profileId"])
  emoji: String
  activities: [Activity] @hasMany
}

type Activity
  @model
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  owner: String
    @auth(
      rules: [
        { allow: owner, operations: [read, delete] }
        { allow: private, operations: [read] }
      ]
    )
  groupId: ID! @index(sortKeyFields: ["createdAt"])
  emoji: String!
  groupMembership: GroupMembership @belongsTo
  groupMembershipActivitiesId: ID @index(sortKeyFields: ["createdAt"])
  createdAt: AWSDateTime!
}

type Recognition
  @model
  @auth(rules: [{ allow: owner }, { allow: private, operations: [read] }]) {
  id: ID!
  owner: String
    @auth(
      rules: [
        { allow: owner, operations: [read, delete] }
        { allow: private, operations: [read] }
      ]
    )
  activityId: ID! @index(sortKeyFields: ["createdAt"])
  emoji: String!
  createdAt: AWSDateTime!
}

type Notification @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  owner: String @auth(rules: [{ allow: owner, operations: [read] }])
  pushTokenGroup: String! @index(sortKeyFields: ["createdAt"])
  createdAt: AWSDateTime!
}
